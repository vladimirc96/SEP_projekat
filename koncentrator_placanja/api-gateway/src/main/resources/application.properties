spring.application.name=api-gateway


eureka.instance.hostname:localhost
eureka.instance.secure-port-enabled=true
eureka.instance.secure-port=8440

eureka.client.serviceUrl.defaultZone:https://localhost:8761/eureka
eureka.client.secure-port-enabled: true


zuul.routes.koncentrator.serviceId=koncentrator
#zuul.routes.reservationservice.serviceId=reservation-service
#zuul.routes.authservice.serviceId=auth-service
zuul.host.socket-timeout-millis=30000
zuul.ribbon.eager-load.enabled=true

ribbon.ReadTimeout=10000
ribbon.ConnectTimeout=10000

ribbon.eureka.enabled=true

zuul.sensitive-headers=

hystrix.command.default.execution.isolation.thread.timeoutInMilliseconds= 60000
hystrix.command.gateway.execution.isolation.thread.timeoutInMilliseconds= 60000



# Define a custom port instead of the default 8080
server.port=8440
server.port.http=8084
server.ssl.enabled=true
## SSL protocol to use.
server.ssl.protocol=TLS
server.ssl.enabled-protocols=TLSv1.2

## Tell Spring Security (if used) to require requests over HTTPS
#
## SSL protocol to use.
# The format used for the keystore. It could be set to JKS in case it is a JKS file
server.ssl.key-store-type=JKS
server.ssl.key-store-provider=SUN
# The path to the keystore containing the certificate
server.ssl.key-store=keystores/sep_gateway.jks
# The password used to generate the certificate
server.ssl.key-store-password=mnogodobrasifra
# The alias mapped to the certificate
server.ssl.key-alias=sep_gateway

server.ssl.trust-store=keystores/sep_discovery.jks
server.ssl.trust-store-provider=SUN
server.ssl.trust-store-password=mnogodobrasifra