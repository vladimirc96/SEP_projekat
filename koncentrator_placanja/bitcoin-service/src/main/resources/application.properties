spring.application.name = bitcoin-service

eureka.instance.hostname:localhost
eureka.instance.secure-port-enabled=true
eureka.instance.secure-port=8444

eureka.client.serviceUrl.defaultZone:https://localhost:8761/eureka/
eureka.client.secure-port-enabled: true



ribbon.eureka.enabled=true


# Define a custom port instead of the default 8080
server.port=8444
server.port.http=8084
server.ssl.enabled=true
## SSL protocol to use.
server.ssl.protocol=TLS
server.ssl.enabled-protocols=TLSv1.2

## Tell Spring Security (if used) to require requests over HTTPS
#
## SSL protocol to use.
# The format used for the keystore. It could be set to JKS in case it is a JKS file
server.ssl.key-store-type=JKS
server.ssl.key-store-provider=SUN
# The path to the keystore containing the certificate
server.ssl.key-store=keystores/bbf_sep_bitcoin-service.jks
# The password used to generate the certificate
server.ssl.key-store-password=mnogodobrasifra
# The alias mapped to the certificate
server.ssl.key-alias=bbf_sep_bitcoin-service

server.ssl.trust-store=keystores/bbf_sep_bitcoin-service.jks
server.ssl.trust-store-provider=SUN
server.ssl.trust-store-password=mnogodobrasifra

#Spring DataSource
spring.datasource.url = jdbc:mysql://localhost:3306/bitcoin_service?useSSL=false&createDatabaseIfNotExist=true&useUnicode=yes&characterEncoding=UTF-8
spring.datasource.username = root
spring.datasource.password = root
#korisno ako je konekcija dugo u idle stanju
spring.datasource.dbcp.test-while-idle = true
spring.datasource.dbcp.validation-query = SELECT 1
#JPA-Hibernate
spring.jpa.show-sql = true
#kreira tabele na osnovu anotacija @Entity i kada aplikacija zavrsi
#sa radom dropuje ih
spring.jpa.hibernate.ddl-auto = create-drop
#bira najbolje konvencije imenovanja za tabele i polja u bazi
spring.jpa.hibernate.naming.strategy = org.hibernate.cfg.ImprovedNamingStrategy
spring.datasource.initialization-mode=always
#optimizacija za mysql upite
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5Dialect

spring.jpa.properties.hibernate.connection.CharSet=UTF-8
spring.jpa.properties.hibernate.connection.characterEncoding=UTF-8
spring.jpa.properties.hibernate.connection.useUnicode=true

spring.datasource.tomcat.connection-properties=useUnicode=true;characterEncoding=utf-8;

