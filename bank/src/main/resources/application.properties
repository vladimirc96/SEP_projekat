spring.datasource.url = jdbc:mysql://${DB_ADDRESS}/bank?useSSL=false&createDatabaseIfNotExist=true
spring.datasource.username =${DB_USERNAME}
spring.datasource.password = ${DB_PASS}

spring.datasource.dbcp.test-while-idle = true
spring.datasource.dbcp.validation-query = SELECT 1

spring.jpa.show-sql = true	

spring.jpa.hibernate.ddl-auto = create-drop
spring.jpa.hibernate.naming.strategy = org.hibernate.cfg.ImprovedNamingStrategy
spring.datasource.initialization-mode=always
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5InnoDBDialect

#HTTPS config


# Define a custom port instead of the default 8080
server.port=8450
server.port.http=8090
server.ssl.enabled=true
## SSL protocol to use.
server.ssl.protocol=TLS
server.ssl.enabled-protocols=TLSv1.2

# Tell Spring Security (if used) to require requests over HTTPS

## SSL protocol to use.
# The format used for the keystore. It could be set to JKS in case it is a JKS file
server.ssl.key-store-type=JKS
server.ssl.key-store-provider=SUN
# The path to the keystore containing the certificate
server.ssl.key-store=keystores/bbf_sep_bank.jks
# The password used to generate the certificate
server.ssl.key-store-password=mnogodobrasifra
# The alias mapped to the certificate
server.ssl.key-alias=bbf_sep_bank

server.ssl.trust-store=keystores/bbf_sep_bank.jks
server.ssl.trust-store-provider=SUN
server.ssl.trust-store-password=mnogodobrasifra